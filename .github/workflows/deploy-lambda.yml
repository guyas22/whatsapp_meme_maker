name: Deploy Lambda

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create deployment package
      run: |
        mkdir -p package/backend
        rsync -av --exclude='__pycache__' --exclude='*.pyc' --exclude='*.pyo' --exclude='*.pyd' --exclude='tests' --exclude='docs' backend/ package/backend/
        cp app.py package/
        cp requirements.txt package/
        
        cd package
        
        pip install --target . -r requirements.txt
        rm -rf *.dist-info *.egg-info __pycache__
        
        # Zip the deployment package
        zip -r ../deployment.zip .
        
        # Debugging: Print largest files and folders
        echo "=== Largest Directories ==="
        du -h --max-depth=1 | sort -rh | head -n 10
        
        echo "=== Largest Files ==="
        find . -type f -exec du -h {} + | sort -rh | head -n 10
        
        # Validate package size
        if [ $(stat -c%s "../deployment.zip") -gt 50000000 ]; then
          echo "Error: Deployment package exceeds 50 MB. Consider optimizing the package."
          exit 1
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to Lambda
      run: |
        # Upload to S3 first
        aws s3 cp deployment.zip s3://${{ secrets.AWS_S3_BUCKET }}/deployment.zip
        
        # Update Lambda from S3
        aws lambda update-function-code \
          --function-name meme-generator-api \
          --s3-bucket ${{ secrets.AWS_S3_BUCKET }} \
          --s3-key deployment.zip
